package de.cebitec.mgx.gui.wizard.seqrun;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;

public final class SeqRunVisualPanel2 extends JPanel {

    public static final String PROP_SEQFILE = "seqfile";
    private File file = null;

    /** Creates new form SeqRunVisualPanel2 */
    public SeqRunVisualPanel2() {
        initComponents();
        fchooser.addChoosableFileFilter(new SeqFileFilter());
        fchooser.addPropertyChangeListener(new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                if ("SelectedFileChangedProperty".equals(evt.getPropertyName())) {
                    file = fchooser.getSelectedFile();
                    System.err.println("FILE: "+file.getName());
                    firePropertyChange(PROP_SEQFILE, 0, 1);
                }
            }
        });
    }

    @Override
    public String getName() {
        return "Select sequence data";
    }

    public File getSelectedFile() {
        return file;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fchooser = new javax.swing.JFileChooser();

        fchooser.setControlButtonsAreShown(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fchooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fchooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fchooser;
    // End of variables declaration//GEN-END:variables

    private final class SeqFileFilter extends FileFilter {

        @Override
        public boolean accept(File f) {
            if (f.isDirectory()) {
                return false;
            }

            String extension = Utils.getExtension(f);
            if (extension != null) {
                if (extension.equals(Utils.fastq)
                        || extension.equals(Utils.fq)
                        || extension.equals(Utils.fasta)
                        || extension.equals(Utils.fas)
                        || extension.equals(Utils.fsa)) {
                    return true;
                } else {
                    return false;
                }
            }

            return false;
        }

        @Override
        public String getDescription() {
            return "Sequence files (*.fas, *.fsa, *.fasta, *.fastq, *.fq)";
        }
    }

    private static class Utils {

        public final static String fastq = "fastq";
        public final static String fq = "fq";
        public final static String fasta = "fasta";
        public final static String fas = "fas";
        public final static String fsa = "fsa";

        /*
         * Get the extension of a file.
         */
        public static String getExtension(File f) {
            String ext = null;
            String s = f.getName();
            int i = s.lastIndexOf('.');

            if (i > 0 && i < s.length() - 1) {
                ext = s.substring(i + 1).toLowerCase();
            }
            return ext;
        }
    }
}
