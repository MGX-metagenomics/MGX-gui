package de.cebitec.mgx.gui.wizard.seqrun;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;

public final class SeqRunVisualPanel2 extends JPanel {

    /** Creates new form SeqRunVisualPanel2 */
    public SeqRunVisualPanel2() {
        initComponents();
        seqfilechoosebutton.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                JFileChooser fc = new JFileChooser();
                fc.addChoosableFileFilter(new SeqFileFilter());
                int returnVal = fc.showOpenDialog(new JFrame());
                if (returnVal == JFileChooser.APPROVE_OPTION) {
                    File file = fc.getSelectedFile();
                    try {
                        seqfilename.setText(file.getCanonicalPath().toString());
                    } catch (IOException ex) {
                    }
                }
            }
        });
    }

    @Override
    public String getName() {
        return "Upload sequence data";
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        seqfilename = new javax.swing.JTextField();
        seqfilechoosebutton = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(SeqRunVisualPanel2.class, "SeqRunVisualPanel2.jLabel1.text")); // NOI18N

        seqfilename.setText(org.openide.util.NbBundle.getMessage(SeqRunVisualPanel2.class, "SeqRunVisualPanel2.seqfilename.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(seqfilechoosebutton, org.openide.util.NbBundle.getMessage(SeqRunVisualPanel2.class, "SeqRunVisualPanel2.seqfilechoosebutton.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(seqfilename, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(seqfilechoosebutton)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(seqfilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seqfilechoosebutton))
                .addContainerGap(239, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton seqfilechoosebutton;
    private javax.swing.JTextField seqfilename;
    // End of variables declaration//GEN-END:variables

//    private final class CheckBoxListener implements ItemListener {
//
//        @Override
//        public void itemStateChanged(ItemEvent ie) {
//            if (ie.getStateChange() == ItemEvent.DESELECTED) {
//                qualfilename.setEnabled(false);
//                qualfilename.setText("");
//                qualfilechoosebutton.setEnabled(false);
//            } else {
//                qualfilename.setEnabled(true);
//                qualfilechoosebutton.setEnabled(true);
//            }
//        }
//    }

    private final class SeqFileFilter extends FileFilter {

        @Override
        public boolean accept(File f) {
            if (f.isDirectory()) {
                return false;
            }

            String extension = Utils.getExtension(f);
            if (extension != null) {
                if (extension.equals(Utils.fastq)
                        || extension.equals(Utils.fq)
                        || extension.equals(Utils.fasta)
                        || extension.equals(Utils.fas)
                        || extension.equals(Utils.fsa)) {
                    return true;
                } else {
                    return false;
                }
            }

            return false;
        }

        @Override
        public String getDescription() {
            return "Sequence files";
        }
    }

    private static class Utils {

        public final static String fastq = "fastq";
        public final static String fq = "fq";
        public final static String fasta = "fasta";
        public final static String fas = "fas";
        public final static String fsa = "fsa";

        /*
         * Get the extension of a file.
         */
        public static String getExtension(File f) {
            String ext = null;
            String s = f.getName();
            int i = s.lastIndexOf('.');

            if (i > 0 && i < s.length() - 1) {
                ext = s.substring(i + 1).toLowerCase();
            }
            return ext;
        }
    }
}
