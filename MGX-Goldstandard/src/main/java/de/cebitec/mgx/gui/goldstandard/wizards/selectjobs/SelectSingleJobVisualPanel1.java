/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cebitec.mgx.gui.goldstandard.wizards.selectjobs;

import de.cebitec.mgx.api.model.AttributeTypeI;
import de.cebitec.mgx.api.model.JobI;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionListener;

public final class SelectSingleJobVisualPanel1 extends JPanel{

    public static final String PROP_JOB = "job";
    public static final String PROP_ATTRIBUTETYPE = "attribute_type";
    public static final String PROP_GOLDSTANDARD = "goldstandard";
    
    /**
     * Creates new form SelectSingleJobVisualPanel1
     */
    public SelectSingleJobVisualPanel1(Map<JobI, List<AttributeTypeI>> jobs){
        initComponents();
        DefaultListModel<JobI> jobModel = new DefaultListModel<>();
        for (JobI job : jobs.keySet())            
            jobModel.addElement(job);
        jobList.setModel(jobModel);
        jobList.setCellRenderer(new JobRenderer());
        
        attributeTypeBox.setRenderer(new AttributeTypeRenderer());
        
        clearSelections();
    }
    
    public void addListSelectionListener(ListSelectionListener lsl){
        jobList.getSelectionModel().addListSelectionListener(lsl);
    }

    public JobI getSelectedJob(){
        return jobList.getSelectedValue();
    }
    
    public AttributeTypeI getSelectedAttributeType(){
        return (AttributeTypeI)attributeTypeBox.getSelectedItem();
    }
    
    public void setAttributeTypeList(Set<AttributeTypeI> attrTypes){
        attributeTypeBox.removeAllItems();
        for (AttributeTypeI at : attrTypes)
            attributeTypeBox.addItem(at);        
    }
    
    public void enableAttributeTypeBox(boolean enable){
        attributeTypeBox.setEnabled(enable);
    }
    
    public void clearSelections(){
        jobList.getSelectionModel().clearSelection();
    }
    
    @Override
    public String getName() {
        return "Step #1";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jobList = new javax.swing.JList<>();
        attributeTypeBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        jobList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jobList);

        attributeTypeBox.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(SelectSingleJobVisualPanel1.class, "SelectSingleJobVisualPanel1.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(attributeTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attributeTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<AttributeTypeI> attributeTypeBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<JobI> jobList;
    // End of variables declaration//GEN-END:variables

}
