/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cebitec.mgx.gui.mgxbrowser;

import java.awt.BorderLayout;
import javafx.application.Platform;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.embed.swing.JFXPanel;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Priority;
import javafx.scene.layout.VBox;
import javafx.scene.web.WebEngine;
import javafx.scene.web.WebView;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component die den Browser beinhaltet.
 */
@ConvertAsProperties(
    dtd = "-//de.cebitec.mgx.gui.mgxbrowser//Browser//EN",
autostore = false)
@TopComponent.Description(
    preferredID = "BrowserTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE",
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "de.cebitec.mgx.gui.mgxbrowser.BrowserTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
    displayName = "#CTL_BrowserAction",
preferredID = "BrowserTopComponent")
@Messages({
   "CTL_BrowserAction=Browser",
   "CTL_BrowserTopComponent=Browser Window",
   "HINT_BrowserTopComponent=This is a Browser window"
})
public final class BrowserTopComponent extends TopComponent {

   /**
    * Panel f√ºr den Browser.
    */
   private JFXPanel panel;

   /**
    * DefaultUrl.
    */
   public static final String DEFAULT_URL = "http://www2.cebitec.uni-bielefeld.de/comics/";

   /**
    * TopComponent.
    */
   public BrowserTopComponent() {
	Platform. setImplicitExit(false);
	initComponents();
	setName(Bundle.CTL_BrowserTopComponent());
	setToolTipText(Bundle.HINT_BrowserTopComponent());
	init();
   }

   /**
    * Initialisiert die View.
    */
   private void init() {
	panel = new JFXPanel();
	setLayout(new BorderLayout());
	add(panel, BorderLayout.CENTER);
	Platform.runLater(new Runnable() {
	   public void run() {

		BorderPane pane = new BorderPane();
		panel.setScene(new Scene(pane));
		WebView webView = new WebView();
		final WebEngine webEngine = webView.getEngine();
		webEngine.load(DEFAULT_URL);
		final TextField locationField = new TextField(DEFAULT_URL);

		webEngine.locationProperty().addListener(new ChangeListener<String>() {
		   @Override
		   public void changed(ObservableValue<? extends String> observable, String oldValue, String newValue) {
			locationField.setText(newValue);
		   }
		});
		EventHandler<ActionEvent> goAction = new EventHandler<ActionEvent>() {
		   @Override
		   public void handle(ActionEvent event) {
			webEngine.load(locationField.getText().startsWith("http://")
			    ? locationField.getText()
			    : "http://" + locationField.getText());
		   }
		};
		locationField.setOnAction(goAction);
		Button goButton = new Button("Go");
		goButton.setDefaultButton(true);
		goButton.setOnAction(goAction);

		HBox hBox = new HBox(5);
		hBox.setPadding(new Insets(5, 5, 0, 5));
		hBox.getChildren().setAll(locationField, goButton);
		HBox.setHgrow(locationField, Priority.ALWAYS);

		VBox vBox = new VBox(5);
		vBox.setPadding(new Insets(5,0, 0, 5));
		vBox.getChildren().setAll(hBox, webView);
		VBox.setVgrow(webView, Priority.ALWAYS);
		pane.setCenter(vBox);
	   }
	});


   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      setPreferredSize(new java.awt.Dimension(0, 0));

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 400, Short.MAX_VALUE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 300, Short.MAX_VALUE)
      );
   }// </editor-fold>//GEN-END:initComponents

   // Variables declaration - do not modify//GEN-BEGIN:variables
   // End of variables declaration//GEN-END:variables
   @Override
   public void componentOpened() {

   }

   @Override
   public void componentClosed() {
   }

   void writeProperties(java.util.Properties p) {
	p.setProperty("version", "1.0");
   }

   void readProperties(java.util.Properties p) {
	String version = p.getProperty("version");
   }
}
