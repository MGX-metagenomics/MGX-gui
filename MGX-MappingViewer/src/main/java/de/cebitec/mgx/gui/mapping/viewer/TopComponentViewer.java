/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cebitec.mgx.gui.mapping.viewer;

import de.cebitec.mgx.gui.controller.MGXMaster;
import de.cebitec.mgx.gui.datamodel.Mapping;
import de.cebitec.mgx.gui.datamodel.Reference;
import de.cebitec.mgx.gui.mapping.viewer.positions.panel.ReadsBasePanel;
import de.cebitec.mgx.gui.mapping.viewer.positions.panel.ReferenceBasePanel;
import de.cebitec.mgx.gui.mapping.viewer.positions.panel.BasePanelFactory;
import java.awt.BorderLayout;
import java.awt.GridBagConstraints;
import java.util.concurrent.ExecutionException;
import javax.swing.JPanel;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Exceptions;
import org.openide.util.Lookup;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.Utilities;

@TopComponent.Description(
        preferredID = "TopComponentViewer",
        persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "de.cebitec.mgx.gui.mapping.viewer")
@ActionReference(path = "Menu/Window", position = 333)
@Messages({
    "CTL_MappingAction=ReferenceView",
    "CTL_TopComponentViewer=Mapping Window",
})
public final class TopComponentViewer extends TopComponent {

    private MGXMaster currentMaster = null;
    private final Lookup.Result<MGXMaster> mgxMasterResult;
    private Reference reference;
    private Mapping mapping;

    public TopComponentViewer(Reference reference, Mapping mapping) {
        this.reference = reference;
        this.mapping = mapping;
        mgxMasterResult = Utilities.actionsGlobalContext().lookupResult(MGXMaster.class);
        setName(Bundle.CTL_TopComponentViewer());
    }

    private void createView() throws InterruptedException, ExecutionException {
        BasePanelFactory factory = new BasePanelFactory(reference, currentMaster);
        setLayout(new BorderLayout());
        GridBagConstraints c = new GridBagConstraints();

        ReferenceBasePanel refBasePanel = factory.getGenomeViewerBasePanel();
        ReadsBasePanel readsBasePanel = factory.getReadViewerBasePanel(mapping);
        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        panel.add(refBasePanel, BorderLayout.NORTH);
        panel.add(readsBasePanel, BorderLayout.CENTER);
        add(panel);
    }

    private void loadMGXMaster() {
        for (MGXMaster newMaster : mgxMasterResult.allInstances()) {
            if (currentMaster == null || !newMaster.equals(currentMaster)) {
                currentMaster = newMaster;
                return;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        loadMGXMaster();
        try {
            this.createView();
        } catch (InterruptedException | ExecutionException ex) {
            Exceptions.printStackTrace(ex);
        }
    }

    @Override
    public void componentClosed() {
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
    }
}
